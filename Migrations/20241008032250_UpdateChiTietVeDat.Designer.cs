// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NhaXeMaiLinh.Data;

#nullable disable

namespace NhaXeMaiLinh.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241008032250_UpdateChiTietVeDat")]
    partial class UpdateChiTietVeDat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.ChiTietVeDat", b =>
                {
                    b.Property<string>("ChiTietVeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("GheID")
                        .HasColumnType("int");

                    b.Property<decimal>("GiaGhe")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TinhTrangGhe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("XeID")
                        .HasColumnType("int");

                    b.HasKey("ChiTietVeID");

                    b.HasIndex("VeID")
                        .IsUnique();

                    b.HasIndex("XeID")
                        .IsUnique();

                    b.ToTable("ChiTietVeDats");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.FileTinTuc", b =>
                {
                    b.Property<string>("FileId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Loai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenFile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinTucId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("FileId");

                    b.HasIndex("TinTucId");

                    b.ToTable("FileTinTuc");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.Ghe", b =>
                {
                    b.Property<int>("GheID")
                        .HasColumnType("int");

                    b.Property<int>("XeID")
                        .HasColumnType("int");

                    b.Property<string>("TenGhe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GheID", "XeID");

                    b.HasIndex("XeID");

                    b.ToTable("Ghes");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.HoaDon", b =>
                {
                    b.Property<int>("HoaDonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HoaDonID"));

                    b.Property<DateTime>("NgayLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PhuongThucThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TrangThaiThanhToan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("HoaDonID");

                    b.HasIndex("NhanVienID");

                    b.HasIndex("VeID");

                    b.ToTable("HoaDons");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.KhachHang", b =>
                {
                    b.Property<string>("KhachHangID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AppUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HangThanhVien")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KhachHangID");

                    b.HasIndex("AppUserId")
                        .IsUnique()
                        .HasFilter("[AppUserId] IS NOT NULL");

                    b.ToTable("KhachHangs");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.LichSuDoiGhe", b =>
                {
                    b.Property<int>("DoiGheID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DoiGheID"));

                    b.Property<decimal>("ChenhLechGia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ChiTietVeDatChiTietVeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChiTietVeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GheCu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GheMoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GiaoDichID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LyDoDoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDoi")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("DoiGheID");

                    b.HasIndex("ChiTietVeDatChiTietVeID");

                    b.HasIndex("GiaoDichID");

                    b.HasIndex("NhanVienID");

                    b.ToTable("LichSuDoiGhes");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.LichSuGiaoDich", b =>
                {
                    b.Property<string>("GiaoDichID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiGiaoDich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayGiaoDich")
                        .HasColumnType("datetime2");

                    b.Property<string>("NhanVienID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TrangThaiGiaoDich")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VeID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GiaoDichID");

                    b.HasIndex("NhanVienID");

                    b.HasIndex("VeID");

                    b.ToTable("LichSuGiaoDichs");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.LichTrinh", b =>
                {
                    b.Property<string>("LichTrinhId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DieuChinhGiaVe")
                        .HasColumnType("int");

                    b.Property<float>("GiaVe")
                        .HasColumnType("real");

                    b.Property<TimeOnly>("GioDen")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("GioKhoiHanh")
                        .HasColumnType("time");

                    b.Property<DateOnly>("NgayDen")
                        .HasColumnType("date");

                    b.Property<DateOnly>("NgayKhoiHanh")
                        .HasColumnType("date");

                    b.Property<string>("TuyenDuongId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("XeId")
                        .HasColumnType("int");

                    b.HasKey("LichTrinhId");

                    b.HasIndex("TuyenDuongId");

                    b.HasIndex("XeId");

                    b.ToTable("LichTrinhs");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.LoaiXe", b =>
                {
                    b.Property<string>("LoaiXeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HangXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenLoaiXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LoaiXeID");

                    b.ToTable("LoaiXe");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.NhanVien", b =>
                {
                    b.Property<string>("NhanVienID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayVaoLam")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NhanVienID");

                    b.ToTable("NhanViens");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.NhanXetKhachHang", b =>
                {
                    b.Property<int>("NhanXetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NhanXetID"));

                    b.Property<int>("DanhGia")
                        .HasColumnType("int");

                    b.Property<string>("KhachHangID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LichTrinhID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NhanXet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NhanXetID");

                    b.HasIndex("KhachHangID");

                    b.HasIndex("LichTrinhID");

                    b.ToTable("NhanXetKhachHangs");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.TaiKhoan", b =>
                {
                    b.Property<string>("TKId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayDK")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quyen")
                        .HasColumnType("int");

                    b.Property<string>("TenTK")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TKId");

                    b.ToTable("TaiKhoans");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.TaiXe", b =>
                {
                    b.Property<string>("TaiXeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BangLaiXe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaiXeID");

                    b.ToTable("TaiXes");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.TinTuc", b =>
                {
                    b.Property<string>("TinTucId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AnhBia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NhanVienID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGian")
                        .HasColumnType("datetime2");

                    b.Property<string>("TieuDe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThaiBaiViet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TinTucId");

                    b.HasIndex("NhanVienID");

                    b.ToTable("TinTucs");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.TuyenDuong", b =>
                {
                    b.Property<string>("TuyenDuongID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DiemDen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiemDi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("QuangDuong")
                        .HasColumnType("real");

                    b.Property<string>("TenTuyenDuong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TuyenDuongID");

                    b.ToTable("TuyenDuongs");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.VeXe", b =>
                {
                    b.Property<string>("VeID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhachHangID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LichTrinhID")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TongGiaVe")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VeID");

                    b.HasIndex("KhachHangID");

                    b.HasIndex("LichTrinhID");

                    b.ToTable("VeXes");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.Xe", b =>
                {
                    b.Property<int>("XeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("XeID"));

                    b.Property<string>("BienSo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoaiXeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("SoGhe")
                        .HasColumnType("int");

                    b.Property<string>("TinhTrang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("XeID");

                    b.HasIndex("LoaiXeId");

                    b.ToTable("Xes");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NhaXeMaiLinh.Models.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.ChiTietVeDat", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.VeXe", "VeXe")
                        .WithOne("ChiTietVeDat")
                        .HasForeignKey("NhaXeMaiLinh.Models.Data.ChiTietVeDat", "VeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NhaXeMaiLinh.Models.Data.Xe", "Xe")
                        .WithOne("ChiTietVeDat")
                        .HasForeignKey("NhaXeMaiLinh.Models.Data.ChiTietVeDat", "XeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("VeXe");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.FileTinTuc", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.TinTuc", "TinTuc")
                        .WithMany("FileTinTuc")
                        .HasForeignKey("TinTucId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TinTuc");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.Ghe", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.Xe", "Xe")
                        .WithMany()
                        .HasForeignKey("XeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.HoaDon", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NhaXeMaiLinh.Models.Data.VeXe", "VeXe")
                        .WithMany()
                        .HasForeignKey("VeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("VeXe");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.KhachHang", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.AppUser", "AppUser")
                        .WithOne("KhachHang")
                        .HasForeignKey("NhaXeMaiLinh.Models.Data.KhachHang", "AppUserId");

                    b.Navigation("AppUser");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.LichSuDoiGhe", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.ChiTietVeDat", "ChiTietVeDat")
                        .WithMany()
                        .HasForeignKey("ChiTietVeDatChiTietVeID");

                    b.HasOne("NhaXeMaiLinh.Models.Data.LichSuGiaoDich", "LichSuGiaoDich")
                        .WithMany()
                        .HasForeignKey("GiaoDichID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NhaXeMaiLinh.Models.Data.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ChiTietVeDat");

                    b.Navigation("LichSuGiaoDich");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.LichSuGiaoDich", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NhaXeMaiLinh.Models.Data.VeXe", "VeXe")
                        .WithMany()
                        .HasForeignKey("VeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("VeXe");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.LichTrinh", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.TuyenDuong", "TuyenDuong")
                        .WithMany()
                        .HasForeignKey("TuyenDuongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NhaXeMaiLinh.Models.Data.Xe", "Xe")
                        .WithMany()
                        .HasForeignKey("XeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TuyenDuong");

                    b.Navigation("Xe");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.NhanXetKhachHang", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NhaXeMaiLinh.Models.Data.LichTrinh", "LichTrinh")
                        .WithMany()
                        .HasForeignKey("LichTrinhID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("LichTrinh");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.TinTuc", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.NhanVien", "NhanVien")
                        .WithMany()
                        .HasForeignKey("NhanVienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.VeXe", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.KhachHang", "KhachHang")
                        .WithMany()
                        .HasForeignKey("KhachHangID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NhaXeMaiLinh.Models.Data.LichTrinh", "LichTrinh")
                        .WithMany("VeXe")
                        .HasForeignKey("LichTrinhID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("LichTrinh");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.Xe", b =>
                {
                    b.HasOne("NhaXeMaiLinh.Models.Data.LoaiXe", "LoaiXe")
                        .WithMany()
                        .HasForeignKey("LoaiXeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoaiXe");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.AppUser", b =>
                {
                    b.Navigation("KhachHang")
                        .IsRequired();
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.LichTrinh", b =>
                {
                    b.Navigation("VeXe");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.TinTuc", b =>
                {
                    b.Navigation("FileTinTuc");
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.VeXe", b =>
                {
                    b.Navigation("ChiTietVeDat")
                        .IsRequired();
                });

            modelBuilder.Entity("NhaXeMaiLinh.Models.Data.Xe", b =>
                {
                    b.Navigation("ChiTietVeDat")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
