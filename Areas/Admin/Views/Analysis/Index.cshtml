@{
    Layout = "~/Areas/Admin/Views/Shared/_dashboard.cshtml";
}

<div class="container my-5">
    <h2 class="mb-4 font-weight-bold text-center" style="font-size: 2.5rem;">Phân Tích Doanh Thu</h2>

    <!-- Doanh thu ngày hiện tại -->
    <div class="mb-5 text-center">
        <h4 class="text-success" style="font-size: 1.5rem;">Doanh Thu Ngày Hiện Tại</h4>
        <h5 class="text-primary" style="font-size: 1.5rem;">
            @ViewData["TodayRevenue"] VND
        </h5>
    </div>

    <!-- Bộ lọc chọn khoảng thời gian -->
    <form method="get" action="/admin/analysis" class="row justify-content-center align-items-center mb-5">
        <div class="col-auto">
            <label for="startDate">Ngày Bắt Đầu:</label>
            <input type="date" id="startDate" name="startDate" class="form-control" value="@ViewData["StartDate"]" />
        </div>
        <div class="col-auto">
            <label for="endDate">Ngày Kết Thúc:</label>
            <input type="date" id="endDate" name="endDate" class="form-control" value="@ViewData["EndDate"]" />
        </div>
        <div class="col-auto">
            <label>&nbsp;</label>
            <button type="submit" class="btn btn-primary form-control">Xem Báo Cáo</button>
        </div>
    </form>

    <!-- Biểu đồ doanh thu theo theo thời gian -->
    <h4 class="text-center mb-4">Biểu Đồ Doanh Thu Theo Thời Gian</h4>
    <canvas id="revenueByDayChart" height="100"></canvas>

    <!-- Biểu đồ doanh thu theo 12 tháng -->
    <h4 class="text-center mt-5 mb-4">Biểu Đồ Doanh Thu 12 Tháng</h4>
    <canvas id="revenueByMonthChart" height="100"></canvas>

    <div class="form-group">
    <label for="routeFilter">Chọn Tuyến Đường:</label>
    <select id="routeFilter" class="form-control" onchange="filterRoute()">
        <option value="">Tất cả Tuyến Đường</option>
        @foreach (var route in ViewData["RouteList"] as List<string>)
        {
            <option value="@route">@route</option>
        }
    </select>
</div>

    <!-- Biểu đồ doanh thu theo tuyến đường -->
    <h4 class="text-center mt-5 mb-4">Biểu Đồ Doanh Thu Theo Tuyến Đường</h4>
    <canvas id="revenueByRouteChart" height="100"></canvas>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // **Biểu đồ doanh thu theo ngày**
        const revenueByDayData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["RevenueByDay"]));
        const revenueByDayChart = new Chart(document.getElementById("revenueByDayChart"), {
            type: "bar",
            data: {
                labels: revenueByDayData.map(item => {
                    const date = new Date(item.Ngay);
                    return `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;
                }),
                datasets: [{
                    label: "Doanh thu (VND)",
                    data: revenueByDayData.map(item => item.DoanhThu),
                    backgroundColor: "rgba(75, 192, 192, 0.7)"
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true, title: { display: true, text: "Doanh Thu (VND)" } },
                    x: { title: { display: true, text: "Ngày" } }
                }
            }
        });

        // **Biểu đồ doanh thu 12 tháng**
        const revenueByMonthData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["RevenueByMonth"]));
        const revenueByMonthChart = new Chart(document.getElementById("revenueByMonthChart"), {
            type: "bar",
            data: {
                labels: revenueByMonthData.map(item => `Tháng ${item.Thang}`),
                datasets: [{
                    label: "Doanh thu (VND)",
                    data: revenueByMonthData.map(item => item.DoanhThu),
                    backgroundColor: "rgba(153, 102, 255, 0.7)"
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true, title: { display: true, text: "Doanh Thu (VND)" } },
                    x: { title: { display: true, text: "Tháng" } }
                }
            }
        });

        // **Biểu đồ doanh thu theo tuyến đường**
         const revenueByRouteData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewData["RevenueByRoute"]));
        const revenueByRouteChart = new Chart(document.getElementById("revenueByRouteChart"), {
            type: "bar",
            data: {
                labels: revenueByRouteData.map(item => item.TuyenDuong),
                datasets: [{
                    label: "Doanh thu (VND)",
                    data: revenueByRouteData.map(item => item.DoanhThu),
                    backgroundColor: "rgba(255, 159, 64, 0.7)"
                }]
            },
            options: {
                responsive: true,
                scales: {
                    y: { beginAtZero: true, title: { display: true, text: "Doanh Thu (VND)" } },
                    x: { title: { display: true, text: "Tuyến Đường" } }
                }
            }
        });

        // Hàm lọc và cập nhật biểu đồ khi chọn tuyến đường
        function filterRoute() {
            const selectedRoute = document.getElementById("routeFilter").value;
            
            let filteredData = revenueByRouteData;
            
            if (selectedRoute) {
                // Lọc theo tuyến đường đã chọn
                filteredData = revenueByRouteData.filter(item => item.TuyenDuong === selectedRoute);
            }

            // Cập nhật dữ liệu biểu đồ
            revenueByRouteChart.data.labels = filteredData.map(item => item.TuyenDuong);
            revenueByRouteChart.data.datasets[0].data = filteredData.map(item => item.DoanhThu);
            revenueByRouteChart.update();
        }
    </script>
}
