@model NhaXeMaiLinh.Areas.Admin.ViewModels.TuyenDuongViewModel

@{
    Layout = "~/Areas/Admin/Views/Shared/_dashboard.cshtml";
}
@section Style {
    <style>
        .form-group label {
            font-weight: bold;
        }

        .card-body {
            background-color: #f8f9fa;
        }

        .form-control {
            border-radius: 5px;
            padding: 0.75rem;
        }

        .btn-primary {
            background-color: #506fe4;
            border: none;
        }

        .btn-primary:hover {
            background-color: #405dcf;
        }

        .container {
            font-family: "Inter", sans-serif;
        }
    </style>
}

<div class="container my-5" style="max-width: 700px;">
    <h2 class="mb-4 text-center" style="font-size: 20px;">Chi tiết tuyến đường</h2>
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            @TempData["SuccessMessage"]
        </div>
    }

    <div class="card m-b-30">
        <div class="card-body py-5">
            <form id="tuyenDuongForm" asp-area="Admin" asp-action="Edit" method="post" class="container">
                @Html.AntiForgeryToken()
                <div class="form-group row align-items-center">
                    <label for="TuyenDuongID" class="col-sm-4 col-form-label">Mã tuyến đường :</label>
                    <div class="col-sm-8">
                        <input type="text" id="TuyenDuongID" name="TuyenDuongID" value="@Model.TuyenDuongID" class="form-control" readonly />
                    </div>
                </div>
                <div class="form-group row align-items-center">
                    <label for="TenTuyenDuong" class="col-sm-4 col-form-label">Tên tuyến đường :</label>
                    <div class="col-sm-8">
                        <input type="text" id="TenTuyenDuong" name="TenTuyenDuong" value="@Model.TenTuyenDuong" class="form-control" readonly />
                        <span class="text-danger">@Html.ValidationMessageFor(m => m.TenTuyenDuong)</span>
                    </div>
                </div>

                <div class="form-group row align-items-center">
                    <label for="DiemDi" class="col-sm-4 col-form-label">Điểm đi :</label>
                    <div class="col-sm-8">
                        <select id="DiemDi" name="DiemDi" class="form-control" disabled>
                            <option value="@Model.DiemDi" selected>@Model.DiemDi</option>
                        </select>
                        <span class="text-danger">@Html.ValidationMessageFor(m => m.DiemDi)</span>
                    </div>
                </div>

                <div class="form-group row align-items-center">
                    <label for="DiemDen" class="col-sm-4 col-form-label">Điểm đến :</label>
                    <div class="col-sm-8">
                        <select id="DiemDen" name="DiemDen" class="form-control" disabled>
                            <option value="@Model.DiemDen" selected>@Model.DiemDen</option>
                        </select>
                        <span class="text-danger">@Html.ValidationMessageFor(m => m.DiemDen)</span>
                    </div>
                </div>

                <div class="form-group row align-items-center">
                    <label for="QuangDuong" class="col-sm-4 col-form-label">Quãng đường :</label>
                    <div class="col-sm-8">
                        <input type="text" id="QuangDuong" name="QuangDuong" value="@Model.QuangDuong" class="form-control" readonly />
                        <span class="text-danger">@Html.ValidationMessageFor(m => m.QuangDuong)</span>
                    </div>
                </div>

                <div class="text-center">
                    <button type="button" id="editButton" class="btn btn-primary">Sửa thông tin</button>
                    <button type="submit" id="saveButton" class="btn btn-success" style="display: none;">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js"></script>
    <script>
        const provincesUrl = "https://provinces.open-api.vn/api/p/";

        // Bật chế độ chỉnh sửa khi bấm "Sửa thông tin"
        document.getElementById("editButton").addEventListener("click", function () {
            // Gọi hàm bật chế độ chỉnh sửa
            toggleEditMode(true);
            // Tải danh sách các tỉnh/thành phố từ API
            loadProvinces();
        });

        function toggleEditMode(enable) {
            // Các phần tử cần bật tắt chế độ chỉnh sửa
            const DiemDi = document.getElementById("DiemDi");
            const DiemDen = document.getElementById("DiemDen");
            const editButton = document.getElementById("editButton");
            const saveButton = document.getElementById("saveButton");
            const inputs = document.querySelectorAll("#tuyenDuongForm input, #tuyenDuongForm select");

            if (enable) {
                // Bỏ readonly và disabled
                inputs.forEach(input => {
                    if (input.id !== "TuyenDuongID") {
                        input.removeAttribute("readonly");
                        input.removeAttribute("disabled");
                    }
                });
                editButton.style.display = "none";
                saveButton.style.display = "inline-block";
            } else {
                // Đặt readonly và disabled lại như ban đầu
                inputs.forEach(input => {
                    input.setAttribute("readonly", true);
                    if (input.tagName === "SELECT") {
                        input.setAttribute("disabled", true);
                    }
                });
                editButton.style.display = "inline-block";
                saveButton.style.display = "none";
            }
        }

        function loadProvinces() {
            axios.get(provincesUrl)
                .then(response => {
                    const provinces = response.data;

                    // Tạo các tùy chọn từ dữ liệu API
                    let options = '<option value="">-- Chọn tỉnh/thành phố --</option>';
                    provinces.forEach(province => {
                        options += `<option value="${province.name}">${province.name}</option>`;
                    });

                    // Gán tùy chọn vào các dropdown
                    const DiemDi = document.getElementById("DiemDi");
                    const DiemDen = document.getElementById("DiemDen");

                    // Lấy giá trị hiện tại để giữ lại
                    const currentDiemDi = DiemDi.value;
                    const currentDiemDen = DiemDen.value;

                    DiemDi.innerHTML = options;
                    DiemDen.innerHTML = options;

                    // Đặt lại giá trị cũ
                    if (currentDiemDi) {
                        DiemDi.value = currentDiemDi;
                    }
                    if (currentDiemDen) {
                        DiemDen.value = currentDiemDen;
                    }
                })
                .catch(error => console.error("Lỗi khi tải danh sách tỉnh/thành phố:", error));
        }
    </script>
}

